//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MilitaryAirfield.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;

    public partial class Воздушное_судно
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Воздушное_судно()
        {
            this.Сотрудник_Воздушное_судно = new HashSet<Сотрудник_Воздушное_судно>();
            this.Полеты = new HashSet<Полеты>();
        }
        [Display(Name = "ID Воздушного судна")]
        public int ID_Воздушного_судна { get; set; }
        [Display(Name = "Регистрационный номер судна")]
        [Required(ErrorMessage = "Введите регистрационный номер судна")]
        public string Регистрационный_номер_судна { get; set; }
        [Display(Name = "Тип воздушного судна")]
        [Required(ErrorMessage = "Введите тип воздушного судна")]
        public string Тип_воздушного_судна { get; set; }
        [Required(ErrorMessage = "Введите название воздушного судна")]
        [Display(Name = "Название воздушного судна")]
        public string Название_воздушного_судна { get; set; }
        [Display(Name = "Год создания")]
        public int Год_создания { get; set; }
        [Display(Name = "Год начала эксплуатации")]
        public int Год_начала_эксплуатации { get; set; }
        [Display(Name = "Работоспособность")]
        public bool Работоспособность { get; set; }
        [Display(Name = "Грузоподъемность (кг)")]
        public int Грузоподъемность_в_кг_ { get; set; }
        [Display(Name = "Максимальная скорость (км/ч)")]
        public int Максимальная_скорость_в_км_ч_ { get; set; }
        [Display(Name = "Длина (м)")]
        [DisplayFormat(DataFormatString = "{0:#,#}")]
        public int Длина_в_м_ { get; set; }
        [Display(Name = "Мощность/тяга двигателя")]
        [Required(ErrorMessage = "Введите мощность/тяга двигателя")]
        public string Мощность_или_тяга_двигателя { get; set; }
        [Display(Name = "Дальность полёта (км)")]
        public int Дальность_полёта_в_км_ { get; set; }
        [Display(Name = "ID навигационной системы")]
        public int ID_навигационной_системы { get; set; }
        [Display(Name = "ID топливной системы")]
        public int ID_топливной_системы { get; set; }
        [Display(Name = "ID вооружения судна")]
        public int ID_вооружения_судна { get; set; }
        [Display(Name = "ID узлов маневрирования")]
        public int ID_узлов_маневрирования { get; set; }

        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Сотрудник_Воздушное_судно> Сотрудник_Воздушное_судно { get; set; }
        public virtual Вооружение Вооружение { get; set; }
        public virtual Навигационная_система Навигационная_система { get; set; }
        public virtual Топливная_система Топливная_система { get; set; }
        public virtual Узлы_маневрирования Узлы_маневрирования { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Полеты> Полеты { get; set; }
    }
}
